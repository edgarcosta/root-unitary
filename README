This package implements a search strategy for root-unitary polynomials (polynomials with all roots on the unit circle) described in:

K.S. Kedlaya, Search techniques for root-unitary polynomials, in Computational Arithmetic Geometry, Contemporary Mathematics 463, American Mathematical Society, 2008, 71-82;

plus some additional improvements which will be documented later.

There are currently six source files:

prescribed_roots.sage: Sage code for high-level routines
prescribed_roots_pyx.spyx: Cython code for tree enumeration
all_roots_in_interval.c: C code, using FLINT library, to test whether a polynomial has its roots in a given interval
all_roots_in_interval.h: associated header file
power_sums.c: C code, using FLINT library, to produce bounds based on power sums
power_sums.h: associated header file

From a Sage prompt, type
  sage: load("prescribed_roots.sage")
and everything should compile automatically.

TODO: Try to port from Sage to Nemo (i.e., from Python to Julia).